/*
 * SpielerPanel.java
 *
 * Created on 03.03.2009, 15:36:05
 */
package view;

import java.text.SimpleDateFormat;
import java.util.List;

import javax.swing.JButton;
import javax.swing.border.TitledBorder;

import model.Team;
import model.Tournament;
import model.User;
import model.enums.TournamentType;

import org.jdesktop.observablecollections.ObservableCollections;

import control.UserManager;

/**
 * Stellt Turnierdaten dar.
 *
 * @author Paul
 */
public class TournamentView extends ContentPanel {

	private static final long serialVersionUID = 7905804773703158531L;
	
    private List<Team> playerList;

    /** Erstellt eine neue Sicht TournamentView
     * @param t aktuelle Turnier
     */
    public TournamentView(Tournament t) {

        // Teamliste auslesen
        UserManager um = UserManager.getInstance();
        User u = um.getLoggedinUser();

        if (u.isManager() || um.isLeader(t) || um.isReferee(t)) {
            playerList = ObservableCollections.observableList(t.getTeams());
        }        

        initComponents();
        
        playerPanel.setBorder(new TitledBorder("Gemeldete "+(t.getType() == TournamentType.SinglePlayer ? "Spieler":"Mannschaften")));

        if (!u.isManager() && !um.isLeader(t) && !um.isReferee(t)) {
            playerPanel.setVisible(false);
            revalidate();
        }

        //
        // Daten setzen
        //

        SimpleDateFormat s = new SimpleDateFormat("dd.MM.yy");
        lblInputTournamentName.setText(t.getName());

        if (t.getExpireDate() != null) {
            lblInputEndSignUpPeriod.setText(s.format(t.getExpireDate()));
        }

        lblInputType.setText(t.getType() == TournamentType.SinglePlayer ? "Einzelspieler-Turnier" : "Mehrspieler-Turnier");
        lblInputGameDuration.setText("" + t.getGameDuration());

        lblInputFee.setText("" + t.getFee());
        lblInputLateSignUpFee.setText("" + t.getLateRegFee());
        lblInputPlayersNum.setText("" + t.getTeams().size() + "/" +
            t.getMaxParticipatingTeams());

        if (t.getType() != TournamentType.MultiPlayer) {
            lblRequiredPlayersPerTeam.setVisible(false);
            lblInputRequiredPlayersPerTeam.setVisible(false);
        } else {
            lblInputRequiredPlayersPerTeam.setText("" + t.getRequiredPlayersPerTeam());
        }

        if (t.getStartDate() != null) {
            lblInputStartDate.setText(s.format(t.getStartDate()));
        }

        lblInputSportType.setText(t.getSportKind());
        lblInputParticipationRequirements.setText(t.getParticipationCond());
        lblInputTournamentState.setText(t.getState().toString());
        
        /**
         * Extras for HTML generation
         */
        JButton b = new JButton("Spielplan");
        

        revalidate();
    }

    /**
     * Get the value of playerList
     *
     * @return the value of playerList
     */
    public List<Team> getPlayerList() {
        return playerList;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        panelTurnierDaten = new javax.swing.JPanel();
        lblSporttype = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        lblEndSignUpPeriod = new javax.swing.JLabel();
        lblMaxPlayers = new javax.swing.JLabel();
        lblFee = new javax.swing.JLabel();
        lblLateSignUpFee = new javax.swing.JLabel();
        lblParticipationRequirements = new javax.swing.JLabel();
        lblInputParticipationRequirements = new javax.swing.JLabel();
        lblInputSportType = new javax.swing.JLabel();
        lblInputStartDate = new javax.swing.JLabel();
        lblInputEndSignUpPeriod = new javax.swing.JLabel();
        lblInputPlayersNum = new javax.swing.JLabel();
        lblInputFee = new javax.swing.JLabel();
        lblInputLateSignUpFee = new javax.swing.JLabel();
        lblTournamentState = new javax.swing.JLabel();
        lblInputTournamentState = new javax.swing.JLabel();
        lblRequiredPlayersPerTeam = new javax.swing.JLabel();
        lblInputRequiredPlayersPerTeam = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblInputType = new javax.swing.JLabel();
        lblInputGameDuration = new javax.swing.JLabel();
        lblHeader = new javax.swing.JLabel();
        lblInputTournamentName = new javax.swing.JLabel();
        playerPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        playerListView = new javax.swing.JList();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(control.MainApplication.class).getContext().getResourceMap(TournamentView.class);
        panelTurnierDaten.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("panelTurnierDaten.border.title"))); // NOI18N
        panelTurnierDaten.setName("panelTurnierDaten"); // NOI18N

        lblSporttype.setText(resourceMap.getString("lblSporttype.text")); // NOI18N
        lblSporttype.setName("lblSporttype"); // NOI18N

        lblStartDate.setText(resourceMap.getString("lblStartDate.text")); // NOI18N
        lblStartDate.setName("lblStartDate"); // NOI18N

        lblEndSignUpPeriod.setText(resourceMap.getString("lblEndSignUpPeriod.text")); // NOI18N
        lblEndSignUpPeriod.setName("lblEndSignUpPeriod"); // NOI18N

        lblMaxPlayers.setText(resourceMap.getString("lblMaxPlayers.text")); // NOI18N
        lblMaxPlayers.setName("lblMaxPlayers"); // NOI18N

        lblFee.setText(resourceMap.getString("lblFee.text")); // NOI18N
        lblFee.setName("lblFee"); // NOI18N

        lblLateSignUpFee.setText(resourceMap.getString("lblLateSignUpFee.text")); // NOI18N
        lblLateSignUpFee.setName("lblLateSignUpFee"); // NOI18N

        lblParticipationRequirements.setText(resourceMap.getString("lblParticipationRequirements.text")); // NOI18N
        lblParticipationRequirements.setName("lblParticipationRequirements"); // NOI18N

        lblInputParticipationRequirements.setText(resourceMap.getString("lblInputParticipationRequirements.text")); // NOI18N
        lblInputParticipationRequirements.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblInputParticipationRequirements.setName("lblInputParticipationRequirements"); // NOI18N

        lblInputSportType.setText(resourceMap.getString("lblInputSportType.text")); // NOI18N
        lblInputSportType.setName("lblInputSportType"); // NOI18N

        lblInputStartDate.setText(resourceMap.getString("lblInputStartDate.text")); // NOI18N
        lblInputStartDate.setName("lblInputStartDate"); // NOI18N

        lblInputEndSignUpPeriod.setText(resourceMap.getString("lblInputEndSignUpPeriod.text")); // NOI18N
        lblInputEndSignUpPeriod.setName("lblInputEndSignUpPeriod"); // NOI18N

        lblInputPlayersNum.setText(resourceMap.getString("lblInputPlayersNum.text")); // NOI18N
        lblInputPlayersNum.setName("lblInputPlayersNum"); // NOI18N

        lblInputFee.setText(resourceMap.getString("lblInputFee.text")); // NOI18N
        lblInputFee.setName("lblInputFee"); // NOI18N

        lblInputLateSignUpFee.setText(resourceMap.getString("lblInputLateSignUpFee.text")); // NOI18N
        lblInputLateSignUpFee.setName("lblInputLateSignUpFee"); // NOI18N

        lblTournamentState.setText(resourceMap.getString("lblTournamentState.text")); // NOI18N
        lblTournamentState.setName("lblTournamentState"); // NOI18N

        lblInputTournamentState.setText(resourceMap.getString("lblInputTournamentState.text")); // NOI18N
        lblInputTournamentState.setName("lblInputTournamentState"); // NOI18N

        lblRequiredPlayersPerTeam.setText(resourceMap.getString("lblRequiredPlayersPerTeam.text")); // NOI18N
        lblRequiredPlayersPerTeam.setName("lblRequiredPlayersPerTeam"); // NOI18N

        lblInputRequiredPlayersPerTeam.setText(resourceMap.getString("lblInputRequiredPlayersPerTeam.text")); // NOI18N
        lblInputRequiredPlayersPerTeam.setName("lblInputRequiredPlayersPerTeam"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        lblInputType.setText(resourceMap.getString("lblInputType.text")); // NOI18N
        lblInputType.setName("lblInputType"); // NOI18N

        lblInputGameDuration.setText(resourceMap.getString("lblInputGameDuration.text")); // NOI18N
        lblInputGameDuration.setName("lblInputGameDuration"); // NOI18N

        javax.swing.GroupLayout panelTurnierDatenLayout = new javax.swing.GroupLayout(panelTurnierDaten);
        panelTurnierDaten.setLayout(panelTurnierDatenLayout);
        panelTurnierDatenLayout.setHorizontalGroup(
            panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTurnierDatenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblInputParticipationRequirements, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelTurnierDatenLayout.createSequentialGroup()
                        .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTournamentState, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblLateSignUpFee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblFee, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblRequiredPlayersPerTeam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMaxPlayers, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblStartDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEndSignUpPeriod, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSporttype, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInputSportType, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(lblInputTournamentState, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(lblInputEndSignUpPeriod, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(lblInputStartDate, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(lblInputPlayersNum, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(lblInputRequiredPlayersPerTeam, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(lblInputFee, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(lblInputLateSignUpFee, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(lblInputGameDuration, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(lblInputType, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)))
                    .addComponent(lblParticipationRequirements, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelTurnierDatenLayout.setVerticalGroup(
            panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTurnierDatenLayout.createSequentialGroup()
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSporttype)
                    .addComponent(lblInputSportType))
                .addGap(4, 4, 4)
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblInputType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblInputGameDuration))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStartDate)
                    .addComponent(lblInputStartDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEndSignUpPeriod)
                    .addComponent(lblInputEndSignUpPeriod))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxPlayers)
                    .addComponent(lblInputPlayersNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRequiredPlayersPerTeam)
                    .addComponent(lblInputRequiredPlayersPerTeam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFee)
                    .addComponent(lblInputFee))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLateSignUpFee)
                    .addComponent(lblInputLateSignUpFee))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTurnierDatenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTournamentState)
                    .addComponent(lblInputTournamentState))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblParticipationRequirements)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInputParticipationRequirements, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblHeader.setFont(lblHeader.getFont().deriveFont(lblHeader.getFont().getStyle() | java.awt.Font.BOLD, lblHeader.getFont().getSize()+3));
        lblHeader.setText(resourceMap.getString("lblHeader.text")); // NOI18N
        lblHeader.setName("lblHeader"); // NOI18N

        lblInputTournamentName.setFont(lblInputTournamentName.getFont().deriveFont((lblInputTournamentName.getFont().getStyle() | java.awt.Font.ITALIC) | java.awt.Font.BOLD, lblInputTournamentName.getFont().getSize()+3));
        lblInputTournamentName.setText(resourceMap.getString("lblInputTournamentName.text")); // NOI18N
        lblInputTournamentName.setName("lblInputTournamentName"); // NOI18N

        playerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("playerPanel.border.title"))); // NOI18N
        playerPanel.setName("playerPanel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        playerListView.setName("playerListView"); // NOI18N

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${playerList}");
        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, playerListView);
        jListBinding.setDetailBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        bindingGroup.addBinding(jListBinding);

        jScrollPane1.setViewportView(playerListView);

        javax.swing.GroupLayout playerPanelLayout = new javax.swing.GroupLayout(playerPanel);
        playerPanel.setLayout(playerPanelLayout);
        playerPanelLayout.setHorizontalGroup(
            playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 176, Short.MAX_VALUE)
            .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(playerPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        playerPanelLayout.setVerticalGroup(
            playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
            .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(playerPanelLayout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblHeader)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblInputTournamentName))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelTurnierDaten, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(playerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeader)
                    .addComponent(lblInputTournamentName))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTurnierDaten, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEndSignUpPeriod;
    private javax.swing.JLabel lblFee;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblInputEndSignUpPeriod;
    private javax.swing.JLabel lblInputFee;
    private javax.swing.JLabel lblInputGameDuration;
    private javax.swing.JLabel lblInputLateSignUpFee;
    private javax.swing.JLabel lblInputParticipationRequirements;
    private javax.swing.JLabel lblInputPlayersNum;
    private javax.swing.JLabel lblInputRequiredPlayersPerTeam;
    private javax.swing.JLabel lblInputSportType;
    private javax.swing.JLabel lblInputStartDate;
    private javax.swing.JLabel lblInputTournamentName;
    private javax.swing.JLabel lblInputTournamentState;
    private javax.swing.JLabel lblInputType;
    private javax.swing.JLabel lblLateSignUpFee;
    private javax.swing.JLabel lblMaxPlayers;
    private javax.swing.JLabel lblParticipationRequirements;
    private javax.swing.JLabel lblRequiredPlayersPerTeam;
    private javax.swing.JLabel lblSporttype;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTournamentState;
    private javax.swing.JPanel panelTurnierDaten;
    private javax.swing.JList playerListView;
    private javax.swing.JPanel playerPanel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}

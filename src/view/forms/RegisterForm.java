/*
 * RegisterForm.java
 *
 * Created on 02.03.2009, 15:29:10
 */
package view.forms;
import java.util.Date;

import javax.swing.JOptionPane;

import model.User;

import org.jdesktop.application.Action;

import control.UserManager;

/**
 * Registrierungsformular
 * Kann aus dem LoginDialog heraus angezeigt werden. Wird dann ein Benutzer registriert,
 * so wird auch der LoginDialog geschlossen.
 *
 * @author Maike, Paul
 */
public class RegisterForm extends javax.swing.JDialog {

	private static final long serialVersionUID = 393633889712780678L;
	
	/** Referenz zum Schlie√üen von dem Dialog nach der Registrierung. */
    private LoginDialog loginDialog;

    /** Erstellt eine neue RegisterForm
     * @param owner Dialog in dem das Fenster liegt
     */
    public RegisterForm(java.awt.Dialog owner) {
        super(owner);
        initComponents();

        loginDialog = null;

        // Am Anfang schon validieren
        validateForm();
    }

    /** Erstellt eine neuen RegisterForm mit dem Bezug auf LoginDialog
     * @param owner Fenster auf dem der Dialog liegt
     * @param loginDialog Logindialog auf dem das Fenster liegt
     */
    public RegisterForm(java.awt.Dialog owner, LoginDialog loginDialog) {
        this(owner);

        this.loginDialog = loginDialog;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        accountPanel = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblPassword2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        txtpPassword = new javax.swing.JPasswordField();
        txtpPassword2 = new javax.swing.JPasswordField();
        dataPanel = new javax.swing.JPanel();
        lblEmail = new javax.swing.JLabel();
        lblEmail2 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblBirthday = new javax.swing.JLabel();
        txtfEmail = new javax.swing.JFormattedTextField();
        txtfEmail2 = new javax.swing.JFormattedTextField();
        txtName = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        dpBirthday = new com.michaelbaranov.microba.calendar.DatePicker();
        cbSchiedsrichter = new javax.swing.JCheckBox();
        btnRegister = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        messagePanel = new view.tools.MessagePanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(control.MainApplication.class).getContext().getResourceMap(RegisterForm.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setBounds(new java.awt.Rectangle(500, 300, 0, 0));
        setModal(true);
        setName("Form"); // NOI18N
        setResizable(false);

        accountPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("accountPanel.border.title"))); // NOI18N
        accountPanel.setName("accountPanel"); // NOI18N

        lblUsername.setText(resourceMap.getString("lblUsername.text")); // NOI18N
        lblUsername.setName("lblUsername"); // NOI18N

        lblPassword.setText(resourceMap.getString("lblPassword.text")); // NOI18N
        lblPassword.setName("lblPassword"); // NOI18N

        lblPassword2.setText(resourceMap.getString("lblPassword2.text")); // NOI18N
        lblPassword2.setName("lblPassword2"); // NOI18N

        txtUsername.setText(resourceMap.getString("txtUsername.text")); // NOI18N
        txtUsername.setName("txtUsername"); // NOI18N
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lostFocus(evt);
            }
        });

        txtpPassword.setText(resourceMap.getString("txtpPassword.text")); // NOI18N
        txtpPassword.setName("txtpPassword"); // NOI18N
        txtpPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lostFocus(evt);
            }
        });

        txtpPassword2.setText(resourceMap.getString("txtpPassword2.text")); // NOI18N
        txtpPassword2.setName("txtpPassword2"); // NOI18N
        txtpPassword2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lostFocus(evt);
            }
        });

        javax.swing.GroupLayout accountPanelLayout = new javax.swing.GroupLayout(accountPanel);
        accountPanel.setLayout(accountPanelLayout);
        accountPanelLayout.setHorizontalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsername)
                    .addComponent(lblPassword)
                    .addComponent(lblPassword2))
                .addGap(14, 14, 14)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtpPassword2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(txtpPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                .addContainerGap())
        );
        accountPanelLayout.setVerticalGroup(
            accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountPanelLayout.createSequentialGroup()
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(accountPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword2)
                    .addComponent(txtpPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("dataPanel.border.title"))); // NOI18N
        dataPanel.setName("dataPanel"); // NOI18N

        lblEmail.setText(resourceMap.getString("lblEmail.text")); // NOI18N
        lblEmail.setName("lblEmail"); // NOI18N

        lblEmail2.setText(resourceMap.getString("lblEmail2.text")); // NOI18N
        lblEmail2.setName("lblEmail2"); // NOI18N

        lblName.setText(resourceMap.getString("lblName.text")); // NOI18N
        lblName.setName("lblName"); // NOI18N

        lblAddress.setLabelFor(txtAddress);
        lblAddress.setText(resourceMap.getString("lblAddress.text")); // NOI18N
        lblAddress.setName("lblAddress"); // NOI18N

        lblBirthday.setText(resourceMap.getString("lblBirthday.text")); // NOI18N
        lblBirthday.setName("lblBirthday"); // NOI18N

        txtfEmail.setText(resourceMap.getString("txtfEmail.text")); // NOI18N
        txtfEmail.setName("txtfEmail"); // NOI18N
        txtfEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lostFocus(evt);
            }
        });

        txtfEmail2.setText(resourceMap.getString("txtfEmail2.text")); // NOI18N
        txtfEmail2.setName("txtfEmail2"); // NOI18N
        txtfEmail2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lostFocus(evt);
            }
        });

        txtName.setText(resourceMap.getString("txtName.text")); // NOI18N
        txtName.setName("txtName"); // NOI18N
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lostFocus(evt);
            }
        });

        txtAddress.setName("txtAddress"); // NOI18N

        dpBirthday.setName("dpBirthday"); // NOI18N
        dpBirthday.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dpBirthdayPropertyChange(evt);
            }
        });

        cbSchiedsrichter.setText(resourceMap.getString("cbSchiedsrichter.text")); // NOI18N
        cbSchiedsrichter.setName("cbSchiedsrichter"); // NOI18N

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbSchiedsrichter, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail)
                            .addComponent(lblEmail2)
                            .addComponent(lblName))
                        .addGap(34, 34, 34)
                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(txtfEmail2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)))
                    .addGroup(dataPanelLayout.createSequentialGroup()
                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddress)
                            .addComponent(lblBirthday))
                        .addGap(67, 67, 67)
                        .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dpBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))))
                .addContainerGap())
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(lblEmail)
                    .addComponent(txtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(lblEmail2)
                    .addComponent(txtfEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddress))
                .addGap(5, 5, 5)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dpBirthday, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbSchiedsrichter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(control.MainApplication.class).getContext().getActionMap(RegisterForm.class, this);
        btnRegister.setAction(actionMap.get("registerButtonAction")); // NOI18N
        btnRegister.setName("btnRegister"); // NOI18N

        btnCancel.setAction(actionMap.get("disposeDialog")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N

        messagePanel.setName("messagePanel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(messagePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(accountPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accountPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnRegister))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * LostFocus-Event von obligatorischen Feldern, um die Felder zu validieren.
     *
     * @param evt Event
     */
    private void lostFocus(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lostFocus
        setIsRegActionEnbled(validateForm());
    }//GEN-LAST:event_lostFocus

    /**
     * DatePicker erfort besonderes Event zum Validieren.
     * @param evt Event
     */
    private void dpBirthdayPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dpBirthdayPropertyChange
        if (evt.getPropertyName().equals("date")) {
            setIsRegActionEnbled(validateForm());
        }
    }//GEN-LAST:event_dpBirthdayPropertyChange

    /**
     * Validiert das Formular
     * 
     * @return true, falls alle Eingaben richtig sind, sonst false
     */
    public boolean validateForm() {
        boolean valid = true;

        messagePanel.clear();

        if (txtUsername.getText().isEmpty()) {
            messagePanel.addMessage("Benutzername darf nicht leer sein.");
            valid = false;
        }

        String p1 = new String(txtpPassword.getPassword());
        String p2 = new String(txtpPassword2.getPassword());

        if (!p1.equals(p2)) {
            messagePanel.addMessage("Passw√∂rter stimmen nicht √ºberein.");
            valid = false;
        } else if (p1.isEmpty()) {
            messagePanel.addMessage("Passwort darf nicht leer sein.");
            valid = false;
        }

        if (!txtfEmail.getText().equals(txtfEmail2.getText())) {
            messagePanel.addMessage("Emails stimmen nicht √ºberein.");
            valid = false;
        } else if (txtfEmail.getText().isEmpty()) {
            messagePanel.addMessage("Email darf nicht leer sein.");
            valid = false;
        }

        if (txtName.getText().isEmpty()) {
            messagePanel.addMessage("Name darf nicht leer sein.");
            valid = false;
        }

        if (dpBirthday.getDate().compareTo(new Date()) > 0) {
            messagePanel.addMessage("Geburtsdatum liegt in der Zukunft.");
            valid = false;
        }

        messagePanel.renderText();
        pack();

        return valid;
    }

    /** Wird aufgef√ºhrt beim Bet√§tigen von Registrieren */
    @Action(enabledProperty = "isRegActionEnbled")
    public void registerButtonAction() {
        UserManager um = UserManager.getInstance();
        User user = new User(txtUsername.getText(), String.valueOf(txtpPassword.getPassword()));
        user.setEmail(txtfEmail.getText());
        user.setName(txtName.getText());
        user.setBirthday(dpBirthday.getDate());
        user.isReferee(cbSchiedsrichter.isSelected());

        if (um.register(user)) {
            // Falls loginDialog bei der Konstruktion √ºbergeben wurde, soll
            // dieser geschlossen werden
            if (loginDialog != null) {
                loginDialog.dispose();
            }

            dispose();
        } else {
            JOptionPane.showMessageDialog(this,
                    "Der Benutzername ist bereits vorhanden.",
                    "Fehlermeldung", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    private boolean isRegActionEnbled = false;

    /**
     * Gibt wieder ob die Registrierung aktiviert ist
     *
     * @return Registrierungs Status
     */
    public boolean isIsRegActionEnbled() {
        return isRegActionEnbled;
    }

    /**
     *
     * Registrieung aktivieren
     * @param b Einschalten
     */
    public void setIsRegActionEnbled(boolean b) {
        boolean old = isIsRegActionEnbled();
        this.isRegActionEnbled = b;
        firePropertyChange("isRegActionEnbled", old, isIsRegActionEnbled());
    }

    /** Schlie√üt die Form. */
    @Action
    public void disposeDialog() {
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accountPanel;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRegister;
    private javax.swing.JCheckBox cbSchiedsrichter;
    private javax.swing.JPanel dataPanel;
    private com.michaelbaranov.microba.calendar.DatePicker dpBirthday;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblBirthday;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmail2;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPassword2;
    private javax.swing.JLabel lblUsername;
    private view.tools.MessagePanel messagePanel;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtUsername;
    private javax.swing.JFormattedTextField txtfEmail;
    private javax.swing.JFormattedTextField txtfEmail2;
    private javax.swing.JPasswordField txtpPassword;
    private javax.swing.JPasswordField txtpPassword2;
    // End of variables declaration//GEN-END:variables
}

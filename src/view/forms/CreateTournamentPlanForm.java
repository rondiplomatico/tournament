/*
 * CreateTournamentPlanForm.java
 *
 * Created on 06.03.2009, 17:28:08
 */
package view.forms;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

import model.Team;
import model.Tournament;
import planning.control.PlanningException;
import planning.control.PlanningManager;
import planning.control.TimeManager.NoPlayTimeException;
import planning.control.mapping.Mapping;
import planning.control.score.ScoreTransfer;
import planning.model.RoundSetting;
import planning.model.TournamentPlan;
import planning.model.Transition;
import planning.model.rounds.RoundType;
import planning.view.TournamentPlanView;
import printing.HTMLGenerator;
import view.ContentPanel;
import control.MainApplication;

/**
 * 
 * @author Maike
 */
public class CreateTournamentPlanForm extends ContentPanel {

	private static final long serialVersionUID = 3482509542084233691L;

	private Tournament t;
	private DefaultListModel model;
	private PlanningManager pm;
	private RoundSetting currentSetting;

	/**
	 * Creates new form CreateTournamentPlanForm
	 * 
	 * @param t
	 *            Turnier für den der Turnierplan erstellt werden soll
	 */
	public CreateTournamentPlanForm(Tournament t) {
		initComponents();
		this.t = t;
		pm = new PlanningManager();
		model = new DefaultListModel();
		roundList.setModel(model);

		updateRoundList();
		// Erstmal alle Einstellungspanel verstecken
		pnlTransitions.setVisible(false);
		pnlRoundSettings.setVisible(false);

		cbMappings.setModel(new DefaultComboBoxModel(Mapping.values()));
		cbScore.setModel(new DefaultComboBoxModel(ScoreTransfer.values()));
		cbRoundType.setModel(new DefaultComboBoxModel(RoundType.values()));
		// Standardtext
		lblRoundDesc
				.setText(RoundType.EinzelgruppenFinalrunde.getDescription());
	}

	/**
	 * Erstellt den Turnierplan inklusive Zeiten.
	 * 
	 * @param onlyConfirmed
	 */
	private void previewPlan(boolean onlyConfirmed) {
		TournamentPlan tp = null;
		try {
			tp = pm.generateTournamentPlan(t, onlyConfirmed);
			pm.schedule(tp);
		} catch (NoPlayTimeException e) {
			JOptionPane
					.showMessageDialog(null,
							"Cannot schedule this plan: Too little time given (see PlayTimes)");
		} catch (PlanningException e) {
			JOptionPane.showMessageDialog(null,
					"Planning error:" + e.getMessage());
		}

		//pm.printSchedule(tp);
		new TournamentPlanView(tp, null);
	}

	/**
	 * Gibt die Einstellungen für die aktuelle Runde wieder
	 * 
	 * @return Die Einstellungen für die aktuelle Runde
	 */
	public RoundSetting getCurrentRound() {
		return currentSetting;
	}

	/**
	 * Setzt die Einstellungen für die aktuelle Runde
	 * 
	 * @param value
	 *            Rundeneinstellungen
	 */
	public void setCurrentRound(RoundSetting value) {
		if (value != null) {
			currentSetting = value;
			settingSelected(currentSetting, roundList.getSelectedIndex());
		}
	}

	/**
	 * Füllt die Liste mit allen Runden des Turniers
	 */
	private void updateRoundList() {
		model.clear();
		for (RoundSetting rs : t.getRoundSettings()) {
			model.addElement(rs);
		}
		if (t.getRoundSettings().size() == 0) {
			pnlRoundSettings.setVisible(false);
		}
	}

	/**
	 * Wird ausgelöst, falls eine Runde selektiert wurde
	 * 
	 * @param r
	 */
	private void settingSelected(RoundSetting r, int listIndex) {
		pnlRoundSettings.setVisible(true);
		// k.A. warum man hier jedes mal ne neue Border erzeugen muss. Casten +
		// setTitle funktioniert nicht.
		pnlRoundSettings.setBorder(BorderFactory
				.createTitledBorder("Weitere Rundeneinstellungen für '"
						+ r.getName() + "'"));
		// Ist die Runde die erste Runde (oder nicht in der Liste)?
		if (listIndex == 0) {
			pnlTransitions.setVisible(false);
		} else {
			pnlTransitions.setVisible(true);
			// Werte auslesen und in Form schreiben
			transitionToForm(r.getInTransition());
			// Titel anpassen
			RoundSetting prev = (RoundSetting) model
					.getElementAt(listIndex - 1);
			pnlTransitions
					.setBorder(BorderFactory
							.createTitledBorder("Übergang von '"
									+ prev.getName() + "'"));
		}
		// Gruppenanzahl-Anzeige
		spnNumGroups.setEnabled(RoundType.implementsIGroupRound(r.getType()));
		spnNumGroups.setValue(r.getNumGroups());
		// Pause zwischen Rundenphasen
		spnMPhasePause.setEnabled(RoundType.implementsIMultiPhaseRound(r
				.getType()));
		spnMPhasePause.setValue(r.getPauseBetweenPhases());
	}

	private void transitionToForm(Transition trans) {
		spnTransPauseMinutes.setValue(trans.getPauseMinutes());
		spnNumProc.setValue(trans.getNumProceedantsPerGroup());
		cbMappings.setSelectedItem(trans.getMappingStrategy());
		cbScore.setSelectedItem(trans.getScoreTransferStrategy());
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

		rbPreviewType = new javax.swing.ButtonGroup();
		jLabel1 = new javax.swing.JLabel();
		leftPanel = new javax.swing.JPanel();
		roundPanel = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		roundList = new javax.swing.JList();
		jLabel2 = new javax.swing.JLabel();
		btnDelRound = new javax.swing.JButton();
		pnlNewRound = new javax.swing.JPanel();
		jLabel3 = new javax.swing.JLabel();
		txtRoundName = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		cbRoundType = new javax.swing.JComboBox();
		jLabel5 = new javax.swing.JLabel();
		lblRoundDesc = new javax.swing.JLabel();
		btnAddRound = new javax.swing.JButton();
		pnlRoundSettings = new javax.swing.JPanel();
		jLabel7 = new javax.swing.JLabel();
		jLabel8 = new javax.swing.JLabel();
		jLabel9 = new javax.swing.JLabel();
		spnMPhasePause = new javax.swing.JSpinner();
		spnNumGroups = new javax.swing.JSpinner();
		pnlTransitions = new javax.swing.JPanel();
		jLabel10 = new javax.swing.JLabel();
		jLabel11 = new javax.swing.JLabel();
		jLabel12 = new javax.swing.JLabel();
		jPanel6 = new javax.swing.JPanel();
		cbMappings = new javax.swing.JComboBox();
		jLabel13 = new javax.swing.JLabel();
		lblMappingDesc = new javax.swing.JLabel();
		jPanel7 = new javax.swing.JPanel();
		cbScore = new javax.swing.JComboBox();
		jLabel15 = new javax.swing.JLabel();
		lblScoreDesc = new javax.swing.JLabel();
		spnTransPauseMinutes = new javax.swing.JSpinner();
		spnNumProc = new javax.swing.JSpinner();
		jLabel14 = new javax.swing.JLabel();
		jPanel3 = new javax.swing.JPanel();
		btnPreview = new javax.swing.JButton();
		btnAccept = new javax.swing.JButton();
		jSeparator1 = new javax.swing.JSeparator();
		jSeparator2 = new javax.swing.JSeparator();
		rbAll = new javax.swing.JRadioButton();
		rbConfirmed = new javax.swing.JRadioButton();

		setName("Form"); // NOI18N

		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application
				.getInstance(control.MainApplication.class).getContext()
				.getResourceMap(CreateTournamentPlanForm.class);
		jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
		jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
		jLabel1.setName("jLabel1"); // NOI18N

		leftPanel.setName("leftPanel"); // NOI18N

		roundPanel.setName("roundPanel"); // NOI18N

		jScrollPane1.setName("jScrollPane1"); // NOI18N

		roundList
				.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		roundList.setName("roundList"); // NOI18N

		org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings
				.createAutoBinding(
						org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
						this, org.jdesktop.beansbinding.ELProperty
								.create("${currentRound}"), roundList,
						org.jdesktop.beansbinding.BeanProperty
								.create("selectedElement"));
		bindingGroup.addBinding(binding);

		jScrollPane1.setViewportView(roundList);

		jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
		jLabel2.setName("jLabel2"); // NOI18N

		btnDelRound.setText(resourceMap.getString("btnDelRound.text")); // NOI18N
		btnDelRound.setName("btnDelRound"); // NOI18N
		btnDelRound.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnDelRoundActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout roundPanelLayout = new javax.swing.GroupLayout(
				roundPanel);
		roundPanel.setLayout(roundPanelLayout);
		roundPanelLayout
				.setHorizontalGroup(roundPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								roundPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												roundPanelLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																btnDelRound,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																287,
																Short.MAX_VALUE)
														.addComponent(
																jScrollPane1,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																287,
																Short.MAX_VALUE)
														.addComponent(
																jLabel2,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																41,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addContainerGap()));
		roundPanelLayout
				.setVerticalGroup(roundPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								roundPanelLayout
										.createSequentialGroup()
										.addComponent(
												jLabel2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												14,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												80,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(
												btnDelRound,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												41, Short.MAX_VALUE)
										.addContainerGap()));

		pnlNewRound.setBorder(javax.swing.BorderFactory
				.createTitledBorder(resourceMap
						.getString("pnlNewRound.border.title"))); // NOI18N
		pnlNewRound.setName("pnlNewRound"); // NOI18N

		jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
		jLabel3.setName("jLabel3"); // NOI18N

		txtRoundName.setText(resourceMap.getString("txtRoundName.text")); // NOI18N
		txtRoundName.setName("txtRoundName"); // NOI18N

		jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
		jLabel4.setName("jLabel4"); // NOI18N

		cbRoundType.setName("cbRoundType"); // NOI18N
		cbRoundType.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				roundTypeSelected(evt);
			}
		});

		jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
		jLabel5.setName("jLabel5"); // NOI18N

		lblRoundDesc.setText(resourceMap.getString("lblRoundDesc.text")); // NOI18N
		lblRoundDesc.setVerticalAlignment(javax.swing.SwingConstants.TOP);
		lblRoundDesc.setName("lblRoundDesc"); // NOI18N

		btnAddRound.setText(resourceMap.getString("btnAddRound.text")); // NOI18N
		btnAddRound.setName("btnAddRound"); // NOI18N
		btnAddRound.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnAddRoundActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout pnlNewRoundLayout = new javax.swing.GroupLayout(
				pnlNewRound);
		pnlNewRound.setLayout(pnlNewRoundLayout);
		pnlNewRoundLayout
				.setHorizontalGroup(pnlNewRoundLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								pnlNewRoundLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												pnlNewRoundLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																btnAddRound,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																275,
																Short.MAX_VALUE)
														.addComponent(
																lblRoundDesc,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																275,
																Short.MAX_VALUE)
														.addGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																pnlNewRoundLayout
																		.createSequentialGroup()
																		.addComponent(
																				jLabel3)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				txtRoundName,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				240,
																				Short.MAX_VALUE))
														.addGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																pnlNewRoundLayout
																		.createSequentialGroup()
																		.addComponent(
																				jLabel4)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																		.addComponent(
																				cbRoundType,
																				0,
																				243,
																				Short.MAX_VALUE))
														.addComponent(
																jLabel5,
																javax.swing.GroupLayout.Alignment.LEADING))
										.addContainerGap()));
		pnlNewRoundLayout
				.setVerticalGroup(pnlNewRoundLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								pnlNewRoundLayout
										.createSequentialGroup()
										.addGroup(
												pnlNewRoundLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel3)
														.addComponent(
																txtRoundName,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(18, 18, 18)
										.addGroup(
												pnlNewRoundLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel4)
														.addComponent(
																cbRoundType,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(18, 18, 18)
										.addComponent(jLabel5)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												lblRoundDesc,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												116, Short.MAX_VALUE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(
												btnAddRound,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												30,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap()));

		javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(
				leftPanel);
		leftPanel.setLayout(leftPanelLayout);
		leftPanelLayout.setHorizontalGroup(leftPanelLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(pnlNewRound,
						javax.swing.GroupLayout.Alignment.TRAILING,
						javax.swing.GroupLayout.DEFAULT_SIZE,
						javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(
						leftPanelLayout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(roundPanel,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));
		leftPanelLayout
				.setVerticalGroup(leftPanelLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								leftPanelLayout
										.createSequentialGroup()
										.addGap(180, 180, 180)
										.addComponent(
												pnlNewRound,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE))
						.addGroup(
								leftPanelLayout
										.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(
												leftPanelLayout
														.createSequentialGroup()
														.addComponent(
																roundPanel,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addContainerGap(308,
																Short.MAX_VALUE))));

		pnlRoundSettings.setBorder(javax.swing.BorderFactory
				.createTitledBorder(resourceMap
						.getString("pnlRoundSettings.border.title"))); // NOI18N
		pnlRoundSettings.setName("pnlRoundSettings"); // NOI18N

		jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
		jLabel7.setName("jLabel7"); // NOI18N

		jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
		jLabel8.setName("jLabel8"); // NOI18N

		jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
		jLabel9.setName("jLabel9"); // NOI18N

		spnMPhasePause.setModel(new javax.swing.SpinnerNumberModel(Integer
				.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
		spnMPhasePause.setEnabled(false);
		spnMPhasePause.setName("spnMPhasePause"); // NOI18N
		spnMPhasePause
				.addChangeListener(new javax.swing.event.ChangeListener() {
					public void stateChanged(javax.swing.event.ChangeEvent evt) {
						spnMPhasePauseStateChanged(evt);
					}
				});

		spnNumGroups.setModel(new javax.swing.SpinnerNumberModel(Integer
				.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
		spnNumGroups.setEnabled(false);
		spnNumGroups.setName("spnNumGroups"); // NOI18N
		spnNumGroups.setRequestFocusEnabled(false);
		spnNumGroups.setVerifyInputWhenFocusTarget(false);
		spnNumGroups.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnNumGroupsStateChanged(evt);
			}
		});

		javax.swing.GroupLayout pnlRoundSettingsLayout = new javax.swing.GroupLayout(
				pnlRoundSettings);
		pnlRoundSettings.setLayout(pnlRoundSettingsLayout);
		pnlRoundSettingsLayout
				.setHorizontalGroup(pnlRoundSettingsLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								pnlRoundSettingsLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												pnlRoundSettingsLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(jLabel7)
														.addComponent(jLabel8))
										.addGap(54, 54, 54)
										.addGroup(
												pnlRoundSettingsLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																pnlRoundSettingsLayout
																		.createSequentialGroup()
																		.addComponent(
																				spnMPhasePause,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				51,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				jLabel9))
														.addComponent(
																spnNumGroups,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																51,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(104, 104, 104)));
		pnlRoundSettingsLayout
				.setVerticalGroup(pnlRoundSettingsLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								pnlRoundSettingsLayout
										.createSequentialGroup()
										.addGroup(
												pnlRoundSettingsLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(jLabel7)
														.addGroup(
																pnlRoundSettingsLayout
																		.createSequentialGroup()
																		.addComponent(
																				spnNumGroups,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addGroup(
																				pnlRoundSettingsLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.BASELINE)
																						.addComponent(
																								spnMPhasePause,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								jLabel9)
																						.addComponent(
																								jLabel8))))
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		pnlTransitions.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Übergang von"));
		pnlTransitions.setName("pnlTransitions"); // NOI18N

		jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
		jLabel10.setName("jLabel10"); // NOI18N

		jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
		jLabel11.setName("jLabel11"); // NOI18N

		jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
		jLabel12.setName("jLabel12"); // NOI18N

		jPanel6.setBorder(javax.swing.BorderFactory
				.createTitledBorder(resourceMap
						.getString("jPanel6.border.title"))); // NOI18N
		jPanel6.setName("jPanel6"); // NOI18N

		cbMappings.setName("cbMappings"); // NOI18N

		binding = org.jdesktop.beansbinding.Bindings
				.createAutoBinding(
						org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
						this,
						org.jdesktop.beansbinding.ELProperty
								.create("${currentRound.inTransition.mappingStrategy}"),
						cbMappings, org.jdesktop.beansbinding.BeanProperty
								.create("selectedItem"));
		bindingGroup.addBinding(binding);

		cbMappings.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cbMappingsActionPerformed(evt);
			}
		});

		jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
		jLabel13.setName("jLabel13"); // NOI18N

		lblMappingDesc.setText(resourceMap.getString("lblMappingDesc.text")); // NOI18N
		lblMappingDesc.setVerticalAlignment(javax.swing.SwingConstants.TOP);
		lblMappingDesc.setName("lblMappingDesc"); // NOI18N

		javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(
				jPanel6);
		jPanel6.setLayout(jPanel6Layout);
		jPanel6Layout
				.setHorizontalGroup(jPanel6Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel6Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanel6Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																lblMappingDesc,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																202,
																Short.MAX_VALUE)
														.addComponent(
																cbMappings,
																javax.swing.GroupLayout.Alignment.LEADING,
																0, 202,
																Short.MAX_VALUE)
														.addComponent(
																jLabel13,
																javax.swing.GroupLayout.Alignment.LEADING))
										.addContainerGap()));
		jPanel6Layout
				.setVerticalGroup(jPanel6Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel6Layout
										.createSequentialGroup()
										.addComponent(
												cbMappings,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jLabel13)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												lblMappingDesc,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												180, Short.MAX_VALUE)
										.addContainerGap()));

		jPanel7.setBorder(javax.swing.BorderFactory
				.createTitledBorder(resourceMap
						.getString("jPanel7.border.title"))); // NOI18N
		jPanel7.setName("jPanel7"); // NOI18N

		cbScore.setName("cbScore"); // NOI18N

		binding = org.jdesktop.beansbinding.Bindings
				.createAutoBinding(
						org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
						this,
						org.jdesktop.beansbinding.ELProperty
								.create("${currentRound.inTransition.scoreTransferStrategy}"),
						cbScore, org.jdesktop.beansbinding.BeanProperty
								.create("selectedItem"));
		bindingGroup.addBinding(binding);

		cbScore.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cbScoreActionPerformed(evt);
			}
		});

		jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
		jLabel15.setName("jLabel15"); // NOI18N

		lblScoreDesc.setText(resourceMap.getString("lblScoreDesc.text")); // NOI18N
		lblScoreDesc.setVerticalAlignment(javax.swing.SwingConstants.TOP);
		lblScoreDesc.setName("lblScoreDesc"); // NOI18N

		javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(
				jPanel7);
		jPanel7.setLayout(jPanel7Layout);
		jPanel7Layout
				.setHorizontalGroup(jPanel7Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel7Layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												jPanel7Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																lblScoreDesc,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																164,
																Short.MAX_VALUE)
														.addComponent(
																cbScore,
																javax.swing.GroupLayout.Alignment.LEADING,
																0, 164,
																Short.MAX_VALUE)
														.addComponent(
																jLabel15,
																javax.swing.GroupLayout.Alignment.LEADING))
										.addContainerGap()));
		jPanel7Layout
				.setVerticalGroup(jPanel7Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel7Layout
										.createSequentialGroup()
										.addComponent(
												cbScore,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addComponent(jLabel15)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												lblScoreDesc,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												180, Short.MAX_VALUE)
										.addContainerGap()));

		spnTransPauseMinutes.setModel(new javax.swing.SpinnerNumberModel(
				Integer.valueOf(0), Integer.valueOf(0), null, Integer
						.valueOf(1)));
		spnTransPauseMinutes.setName("spnTransPauseMinutes"); // NOI18N

		binding = org.jdesktop.beansbinding.Bindings
				.createAutoBinding(
						org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE,
						this,
						org.jdesktop.beansbinding.ELProperty
								.create("${currentRound.inTransition.pauseMinutes}"),
						spnTransPauseMinutes,
						org.jdesktop.beansbinding.BeanProperty.create("value"));
		bindingGroup.addBinding(binding);

		spnTransPauseMinutes
				.addChangeListener(new javax.swing.event.ChangeListener() {
					public void stateChanged(javax.swing.event.ChangeEvent evt) {
						spnTransPauseMinutesStateChanged(evt);
					}
				});

		spnNumProc.setModel(new javax.swing.SpinnerNumberModel(Integer
				.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
		spnNumProc.setName("spnNumProc"); // NOI18N
		spnNumProc.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				spnNumProcStateChanged(evt);
			}
		});

		jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
		jLabel14.setName("jLabel14"); // NOI18N

		javax.swing.GroupLayout pnlTransitionsLayout = new javax.swing.GroupLayout(
				pnlTransitions);
		pnlTransitions.setLayout(pnlTransitionsLayout);
		pnlTransitionsLayout
				.setHorizontalGroup(pnlTransitionsLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								pnlTransitionsLayout
										.createSequentialGroup()
										.addGroup(
												pnlTransitionsLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																pnlTransitionsLayout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addComponent(
																				jLabel12))
														.addComponent(
																jPanel6,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addGroup(
																pnlTransitionsLayout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addComponent(
																				jLabel10,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				224,
																				Short.MAX_VALUE)))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												pnlTransitionsLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																pnlTransitionsLayout
																		.createSequentialGroup()
																		.addGroup(
																				pnlTransitionsLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING,
																								false)
																						.addComponent(
																								spnNumProc)
																						.addComponent(
																								spnTransPauseMinutes,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								51,
																								Short.MAX_VALUE))
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addGroup(
																				pnlTransitionsLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(
																								jLabel14)
																						.addComponent(
																								jLabel11)))
														.addComponent(
																jPanel7,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))));
		pnlTransitionsLayout
				.setVerticalGroup(pnlTransitionsLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								pnlTransitionsLayout
										.createSequentialGroup()
										.addGroup(
												pnlTransitionsLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(jLabel10)
														.addComponent(
																spnTransPauseMinutes,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel11))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												pnlTransitionsLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabel12,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																16,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																spnNumProc,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel14))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												pnlTransitionsLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jPanel6,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jPanel7,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE))
										.addContainerGap()));

		jPanel3.setName("jPanel3"); // NOI18N

		btnPreview.setText(resourceMap.getString("btnPreview.text")); // NOI18N
		btnPreview.setName("btnPreview"); // NOI18N
		btnPreview.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnPreviewActionPerformed(evt);
			}
		});

		btnAccept.setText(resourceMap.getString("btnAccept.text")); // NOI18N
		btnAccept.setName("btnAccept"); // NOI18N
		btnAccept.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnAcceptActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(
				jPanel3);
		jPanel3.setLayout(jPanel3Layout);
		jPanel3Layout
				.setHorizontalGroup(jPanel3Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								jPanel3Layout
										.createSequentialGroup()
										.addGap(52, 52, 52)
										.addComponent(btnPreview)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												221, Short.MAX_VALUE)
										.addComponent(btnAccept)
										.addContainerGap()));
		jPanel3Layout
				.setVerticalGroup(jPanel3Layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								jPanel3Layout
										.createSequentialGroup()
										.addGap(23, 23, 23)
										.addGroup(
												jPanel3Layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(btnAccept)
														.addComponent(
																btnPreview))
										.addContainerGap(23, Short.MAX_VALUE)));

		jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
		jSeparator1.setName("jSeparator1"); // NOI18N

		jSeparator2.setName("jSeparator2"); // NOI18N

		rbPreviewType.add(rbAll);
		rbAll.setSelected(true);
		rbAll.setText(resourceMap.getString("rbAll.text")); // NOI18N
		rbAll.setName("rbAll"); // NOI18N

		rbPreviewType.add(rbConfirmed);
		rbConfirmed.setText(resourceMap.getString("rbConfirmed.text")); // NOI18N
		rbConfirmed.setName("rbConfirmed"); // NOI18N

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														jSeparator2,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														777,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING,
																				false)
																				.addComponent(
																						jLabel1,
																						javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						leftPanel,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jSeparator1,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		10,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addComponent(
																						pnlRoundSettings,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						448,
																						Short.MAX_VALUE)
																				.addComponent(
																						pnlTransitions,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(19, 19,
																		19)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						rbAll)
																				.addComponent(
																						rbConfirmed))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jPanel3,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jLabel1)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.TRAILING)
												.addGroup(
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addGap(7,
																										7,
																										7)
																								.addComponent(
																										pnlRoundSettings,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addPreferredGap(
																										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																								.addComponent(
																										pnlTransitions,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										javax.swing.GroupLayout.DEFAULT_SIZE,
																										Short.MAX_VALUE))
																				.addComponent(
																						jSeparator1,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						461,
																						Short.MAX_VALUE))
																.addGap(16, 16,
																		16))
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		leftPanel,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		Short.MAX_VALUE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
								.addComponent(jSeparator2,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										10,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		jPanel3,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(18, 18,
																		18)
																.addComponent(
																		rbAll)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		rbConfirmed)))
								.addContainerGap()));

		bindingGroup.bind();
	}// </editor-fold>//GEN-END:initComponents

	private void showError(String text) {
		JOptionPane.showMessageDialog(this.getParent(),
				"Vorschau nicht möglich: " + text, "Fehler",
				JOptionPane.ERROR_MESSAGE);
	}

	/**
	 * Prüft ob unter den aktuellen Umständen ein Turnierplan erstellt werden
	 * kann. Gibt evtl.
	 * 
	 * @param onlyConfirmed
	 * @return
	 */
	private boolean checkGenerationPossible(boolean onlyConfirmed) {
		if (t.getRoundSettings().size() == 0) {
			showError("Es sind keine Runden eingerichtet.");
			return false;
		}
		if (t.getNumFields() == 0) {
			showError("Es gibt keine Spielfelder auf denen gespielt werden kann.");
			return false;
		}
		if (t.getTeams().size() == 0) {
			showError("Es sind noch keine Teams zum Turnier gemeldet.");
			return false;
		} else if (onlyConfirmed) {
			// Sollen nur bestätigte Teams angezeigt werden, so muss es
			// mindestens ein bestätigtes Team geben.
			boolean hasTeam = false;
			for (Team team : t.getTeams()) {
				if (team.getConfirmedPlayers().size() >= t
						.getRequiredPlayersPerTeam())
					hasTeam = true;
			}
			if (!hasTeam) {
				showError("Kein Team des Turniers hat die Mindestanzahl an Spielern bestätigt.");
				return false;
			}
		}
		if (t.getReferees().size() == 0) {
			showError("Es sind keine Schiedsrichter für das Turnier vorgemerkt.\nBitte erst die Schiedsrichterzuteilung vornehmen.");
			return false;
		}
		return true;
	}

	private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnPreviewActionPerformed
		if (checkGenerationPossible(rbConfirmed.isSelected())) {
			previewPlan(rbConfirmed.isSelected());
		}
	}// GEN-LAST:event_btnPreviewActionPerformed

	private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAcceptActionPerformed
		if (checkGenerationPossible(true)) {
			// Prüfen, ob die Finalrunde erstellt wurde und entsprechend
			// warnen
			if (!RoundType.implementsIFinalRound(t.getRoundSettings()
					.get(t.getRoundSettings().size() - 1).getType())) {

				int retval = JOptionPane
						.showConfirmDialog(
								MainApplication.getApplication().getMainView()
										.getFrame(),
								"Ihr Turnierplan hat keine Final-Runde. Ohne Final-Runde können "
										+ "keine Ergebnislisten und Urkunden erstellt werden, da kein "
										+ "automatisches Ranking möglich ist. Wollen Sie wirklich mit diesem Plan "
										+ "das Turnier starten?",
								"Turnier starten", JOptionPane.YES_NO_OPTION);

				if (retval == JOptionPane.NO_OPTION) {
					return;
				}
			}

			if (pm.acceptPlanAndStart(t)) {
				fireCallbackEvent(true);
			}
		}
	}// GEN-LAST:event_btnAcceptActionPerformed

	private void spnNumGroupsStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnNumGroupsStateChanged
		if (RoundType.implementsIGroupRound(currentSetting.getType())) {
			currentSetting.setNumGroups((Integer) spnNumGroups.getValue());
		}
	}// GEN-LAST:event_spnNumGroupsStateChanged

	private void spnMPhasePauseStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnMPhasePauseStateChanged
		if (RoundType.implementsIMultiPhaseRound(currentSetting.getType())) {
			currentSetting.setPauseBetweenPhases((Integer) spnMPhasePause
					.getValue());
		}
	}// GEN-LAST:event_spnMPhasePauseStateChanged

	private void spnTransPauseMinutesStateChanged(
			javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnTransPauseMinutesStateChanged
		currentSetting.getInTransition().setPauseMinutes(
				(Integer) spnTransPauseMinutes.getValue());
	}// GEN-LAST:event_spnTransPauseMinutesStateChanged

	private void spnNumProcStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_spnNumProcStateChanged
		currentSetting.getInTransition().setNumProceedantsPerGroup(
				(Integer) spnNumProc.getValue());
	}// GEN-LAST:event_spnNumProcStateChanged

	private void roundTypeSelected(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_roundTypeSelected
		RoundType t = (RoundType) cbRoundType.getSelectedItem();
		lblRoundDesc.setText("<html>" + t.getDescription() + "</html>");
	}// GEN-LAST:event_roundTypeSelected

	private void btnAddRoundActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAddRoundActionPerformed
		// Ist die letzte Runde schon eine Finalrunde, kann keine weitere Runde
		// hinzugefügt werden.
		if (t.getRoundSettings().size() > 0
				&& RoundType.implementsIFinalRound(t.getRoundSettings()
						.get(t.getRoundSettings().size() - 1).getType())) {
			JOptionPane
					.showMessageDialog(
							this.getParent(),
							"Nach einer Finalrunde können keine weiteren Runden hinzugefügt werden.",
							"Hinweis", JOptionPane.INFORMATION_MESSAGE);
		} else {
			if (txtRoundName.getText().length() > 0) {
				RoundSetting rs = pm.addRound(t, txtRoundName.getText(),
						(RoundType) cbRoundType.getSelectedItem());
				updateRoundList();
				roundList.setSelectedValue(rs, true);
			}
		}
	}// GEN-LAST:event_btnAddRoundActionPerformed

	private void btnDelRoundActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnDelRoundActionPerformed
		if (currentSetting != null
				&& JOptionPane.showConfirmDialog(this.getParent(),
						"Runde '" + currentSetting.getName()
								+ "' aus Turnier entfernen?", "Runde löschen",
						JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
			pm.removeRound(t, currentSetting);
			updateRoundList();
		}
	}// GEN-LAST:event_btnDelRoundActionPerformed

	private void cbMappingsActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cbMappingsActionPerformed
		Mapping m = (Mapping) cbMappings.getSelectedItem();
		lblMappingDesc.setText(m.getDescription());
		currentSetting.getInTransition().setMappingStrategy(m);
	}// GEN-LAST:event_cbMappingsActionPerformed

	private void cbScoreActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cbScoreActionPerformed
		ScoreTransfer s = (ScoreTransfer) cbScore.getSelectedItem();
		lblScoreDesc.setText(s.getDescription());
		currentSetting.getInTransition().setScoreTransferStrategy(s);
	}// GEN-LAST:event_cbScoreActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnAccept;
	private javax.swing.JButton btnAddRound;
	private javax.swing.JButton btnDelRound;
	private javax.swing.JButton btnPreview;
	private javax.swing.JComboBox cbMappings;
	private javax.swing.JComboBox cbRoundType;
	private javax.swing.JComboBox cbScore;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel12;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel15;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JPanel jPanel6;
	private javax.swing.JPanel jPanel7;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JSeparator jSeparator2;
	private javax.swing.JLabel lblMappingDesc;
	private javax.swing.JLabel lblRoundDesc;
	private javax.swing.JLabel lblScoreDesc;
	private javax.swing.JPanel leftPanel;
	private javax.swing.JPanel pnlNewRound;
	private javax.swing.JPanel pnlRoundSettings;
	private javax.swing.JPanel pnlTransitions;
	private javax.swing.JRadioButton rbAll;
	private javax.swing.JRadioButton rbConfirmed;
	private javax.swing.ButtonGroup rbPreviewType;
	private javax.swing.JList roundList;
	private javax.swing.JPanel roundPanel;
	private javax.swing.JSpinner spnMPhasePause;
	private javax.swing.JSpinner spnNumGroups;
	private javax.swing.JSpinner spnNumProc;
	private javax.swing.JSpinner spnTransPauseMinutes;
	private javax.swing.JTextField txtRoundName;
	private org.jdesktop.beansbinding.BindingGroup bindingGroup;
	// End of variables declaration//GEN-END:variables

}
